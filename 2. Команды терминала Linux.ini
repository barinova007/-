GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.  $ touch scenariy.txt
 2. Сценарий перенесите в этот файл. $ vim scenariy.txt - (past) - i - esc -:wq 
 3. На против каждого действия - напишите команду в GitBash - [done]


JSON
 4. Создать внешний репозиторий c названием JSON. - создала;
 5. Клонировать репозиторий JSON на локальный компьютер - git clone https://github.com/barinova007/JSON.git;
 6. Внутри локального JSON создать файл “new.json”. - cd /d/gitHub/JSON , touch new.json;
 7. Добавить файл под гит. - git add new.json;
 8. Закоммитить файл. - git commit -m "new.json";
 9. Отправить файл на внешний GitHub репозиторий. - git push;
 10. Отредактировать содержание файла “new.json” - написать информацию о себе 
 (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. - vim new.json; i, esc :wq
 11. Отправить изменения на внешний репозиторий. - git commit -am "new.json", а после - git push;
 12. Создать файл preferences.json -  touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях
 (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON. - vim preferences.json 
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - touch sklls.json, vim sklls.json
 15. Отправить сразу 2 файла на внешний репозиторий. - git add preferences.json и git add sklls.json;
  git push preferences.json + git push sklls.json;
 16. На веб интерфейсе создать файл bug_report.json. - создано;
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - создано;
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. - создано;
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - создано;
 20. Синхронизировать внешний и локальный репозиторий JSON -; git pull

XML
 21. Создать внешний репозиторий c названием XML. - создано;
 22. Клонировать репозиторий XML на локальный компьютер. - cd/d/gitHub,  git clone https://github.com/barinova007/XML.git;
 23. Внутри локального XML создать файл “new.xml”. - touch new.xml;
 24. Добавить файл под гит. - $ git add new.xml, 
 25. Закоммитить файл. - $ git commit -am "xml"
 26. Отправить файл на внешний GitHub репозиторий - $ git status, $ git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе 
 (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
 Всё написать в формате XML. - есть;
 28. Отправить изменения на внешний репозиторий. -  $ git push
 29. Создать файл preferences.xml - touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях 
 (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. - 
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML -
 32. Сделать коммит в одну строку. -  git commit -am preferences.xml sklls.xml
 33. Отправить сразу 2 файла на внешний репозиторий. - git push
 
 34. На веб интерфейсе создать файл bug_report.xml. - создано;
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - сделано;
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. - done; 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - сделано;
 38. Синхронизировать внешний и локальный репозиторий XML -  git pull;

 TXT
 1. Создать внешний репозиторий c названием TXT. - создано;
 2. Клонировать репозиторий TXT на локальный компьютер. - git clone
 3. Внутри локального TXT создать файл “new.txt”. - создала;
 4. Добавить файл под гит. git add new.txt
 5. Закоммитить файл. git commit -am "txt"
 6. Отправить файл на внешний GitHub репозиторий. git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. - done;
 8. Отправить изменения на внешний репозиторий. - git push
 9. Создать файл preferences.txt - done;
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. - done;
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - done;
 12. Сделать коммит в одну строку. -  git commit -am preferences.txt sklls.txt ;
 13. Отправить сразу 2 файла на внешний репозиторий. - git push preferences.txt sklls.txt
 14. На веб интерфейсе создать файл bug_report.txt.  - done;
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  - done;
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT - done;
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. -сдалано;
 18. Синхронизировать внешний и локальный репозиторий TXT -  git pull;



1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
2. Что такое клиент-серверная архитектура.
3. HTTP Методы запросов на сервер.
4. Коды ответов HTTP сервера.
5. Структуры HTTP запросов и ответов.
6. Что такое JSON, XML. Их структура.
7. Тестирование API через Postman (JS, автотесты API).
8. Снятие и чтение логов c внешнего сервера.
9. Снифинг http web трафика через Charles и Fiddler.
10. Dev Tools веб браузеров (Google Chrome, FireFox).
11. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)
12. Мобильное тестирование.
13. Особенность iOS, Android, гайдлайны.
14. Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)
15. Сборка Android приложений на Android Studio.
16. ADB (управление андройд девайсами).
17. Настройка прокси и vpn на iOS и Android.
18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.
19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)
20. Основы bash скриптинг, автоматизация рутинных задач на сервере.
21. Доступ к удалённым серверам.
22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
23. База данных Postgres (установка, настройка и использование).
24. Нереляционная база данных Redis (установка, настройка и использование).
25. Нагрузочное тестирование в Jmeter.
26. Методология разработки Scrum.
27. Python. (Изучение основ. Создание клиент серверного приложения)